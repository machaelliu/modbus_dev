// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data2server.proto

#include "data2server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace data2server {
class DataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataReq>
      _instance;
} _DataReq_default_instance_;
class DataRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataResp>
      _instance;
} _DataResp_default_instance_;
}  // namespace data2server
namespace protobuf_data2server_2eproto {
static void InitDefaultsDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::data2server::_DataReq_default_instance_;
    new (ptr) ::data2server::DataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::data2server::DataReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataReq}, {}};

static void InitDefaultsDataResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::data2server::_DataResp_default_instance_;
    new (ptr) ::data2server::DataResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::data2server::DataResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DataResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDataResp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DataResp.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, building_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, collector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, conn_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, meter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, data_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, orig_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, scaled_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, coef_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataReq, coef_b_),
  0,
  1,
  4,
  2,
  3,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataResp, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::data2server::DataResp, errmsg_),
  1,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 14, sizeof(::data2server::DataReq)},
  { 23, 30, sizeof(::data2server::DataResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::data2server::_DataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::data2server::_DataResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "data2server.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021data2server.proto\022\013data2server\"\253\001\n\007Dat"
      "aReq\022\020\n\010building\030\001 \002(\t\022\021\n\tcollector\030\002 \002("
      "\t\022\021\n\tconn_type\030\003 \002(\r\022\r\n\005meter\030\004 \002(\t\022\021\n\td"
      "ata_desc\030\005 \002(\t\022\021\n\torig_data\030\006 \002(\002\022\023\n\013sca"
      "led_data\030\007 \002(\002\022\016\n\006coef_a\030\010 \002(\002\022\016\n\006coef_b"
      "\030\t \002(\002\"+\n\010DataResp\022\017\n\007errcode\030\001 \002(\005\022\016\n\006e"
      "rrmsg\030\002 \002(\t2B\n\013DataService\0223\n\004Send\022\024.dat"
      "a2server.DataReq\032\025.data2server.DataRespB"
      "\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data2server.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_data2server_2eproto
namespace data2server {

// ===================================================================

void DataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataReq::kBuildingFieldNumber;
const int DataReq::kCollectorFieldNumber;
const int DataReq::kConnTypeFieldNumber;
const int DataReq::kMeterFieldNumber;
const int DataReq::kDataDescFieldNumber;
const int DataReq::kOrigDataFieldNumber;
const int DataReq::kScaledDataFieldNumber;
const int DataReq::kCoefAFieldNumber;
const int DataReq::kCoefBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataReq::DataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data2server_2eproto::scc_info_DataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:data2server.DataReq)
}
DataReq::DataReq(const DataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  building_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_building()) {
    building_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_);
  }
  collector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_collector()) {
    collector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_);
  }
  meter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_meter()) {
    meter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meter_);
  }
  data_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data_desc()) {
    data_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_desc_);
  }
  ::memcpy(&conn_type_, &from.conn_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&coef_b_) -
    reinterpret_cast<char*>(&conn_type_)) + sizeof(coef_b_));
  // @@protoc_insertion_point(copy_constructor:data2server.DataReq)
}

void DataReq::SharedCtor() {
  building_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&conn_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&coef_b_) -
      reinterpret_cast<char*>(&conn_type_)) + sizeof(coef_b_));
}

DataReq::~DataReq() {
  // @@protoc_insertion_point(destructor:data2server.DataReq)
  SharedDtor();
}

void DataReq::SharedDtor() {
  building_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataReq::descriptor() {
  ::protobuf_data2server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data2server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataReq& DataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data2server_2eproto::scc_info_DataReq.base);
  return *internal_default_instance();
}


void DataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:data2server.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      building_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      collector_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      meter_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      data_desc_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&conn_type_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&coef_a_) -
        reinterpret_cast<char*>(&conn_type_)) + sizeof(coef_a_));
  }
  coef_b_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:data2server.DataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string building = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->building().data(), static_cast<int>(this->building().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data2server.DataReq.building");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string collector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collector()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->collector().data(), static_cast<int>(this->collector().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data2server.DataReq.collector");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 conn_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_conn_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &conn_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string meter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->meter().data(), static_cast<int>(this->meter().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data2server.DataReq.meter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string data_desc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data_desc().data(), static_cast<int>(this->data_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data2server.DataReq.data_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float orig_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          set_has_orig_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &orig_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float scaled_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {
          set_has_scaled_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scaled_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float coef_a = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          set_has_coef_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coef_a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float coef_b = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          set_has_coef_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &coef_b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data2server.DataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data2server.DataReq)
  return false;
#undef DO_
}

void DataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data2server.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string building = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->building().data(), static_cast<int>(this->building().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.building");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->building(), output);
  }

  // required string collector = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collector().data(), static_cast<int>(this->collector().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.collector");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collector(), output);
  }

  // required uint32 conn_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->conn_type(), output);
  }

  // required string meter = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->meter().data(), static_cast<int>(this->meter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.meter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->meter(), output);
  }

  // required string data_desc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_desc().data(), static_cast<int>(this->data_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.data_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data_desc(), output);
  }

  // required float orig_data = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->orig_data(), output);
  }

  // required float scaled_data = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->scaled_data(), output);
  }

  // required float coef_a = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->coef_a(), output);
  }

  // required float coef_b = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->coef_b(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:data2server.DataReq)
}

::google::protobuf::uint8* DataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:data2server.DataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string building = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->building().data(), static_cast<int>(this->building().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.building");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->building(), target);
  }

  // required string collector = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->collector().data(), static_cast<int>(this->collector().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.collector");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collector(), target);
  }

  // required uint32 conn_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->conn_type(), target);
  }

  // required string meter = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->meter().data(), static_cast<int>(this->meter().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.meter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->meter(), target);
  }

  // required string data_desc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data_desc().data(), static_cast<int>(this->data_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataReq.data_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data_desc(), target);
  }

  // required float orig_data = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->orig_data(), target);
  }

  // required float scaled_data = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->scaled_data(), target);
  }

  // required float coef_a = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->coef_a(), target);
  }

  // required float coef_b = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->coef_b(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:data2server.DataReq)
  return target;
}

size_t DataReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:data2server.DataReq)
  size_t total_size = 0;

  if (has_building()) {
    // required string building = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building());
  }

  if (has_collector()) {
    // required string collector = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector());
  }

  if (has_meter()) {
    // required string meter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meter());
  }

  if (has_data_desc()) {
    // required string data_desc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_desc());
  }

  if (has_conn_type()) {
    // required uint32 conn_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->conn_type());
  }

  if (has_orig_data()) {
    // required float orig_data = 6;
    total_size += 1 + 4;
  }

  if (has_scaled_data()) {
    // required float scaled_data = 7;
    total_size += 1 + 4;
  }

  if (has_coef_a()) {
    // required float coef_a = 8;
    total_size += 1 + 4;
  }

  if (has_coef_b()) {
    // required float coef_b = 9;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t DataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data2server.DataReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001ff) ^ 0x000001ff) == 0) {  // All required fields are present.
    // required string building = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building());

    // required string collector = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collector());

    // required string meter = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meter());

    // required string data_desc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_desc());

    // required uint32 conn_type = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->conn_type());

    // required float orig_data = 6;
    total_size += 1 + 4;

    // required float scaled_data = 7;
    total_size += 1 + 4;

    // required float coef_a = 8;
    total_size += 1 + 4;

    // required float coef_b = 9;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:data2server.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:data2server.DataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:data2server.DataReq)
    MergeFrom(*source);
  }
}

void DataReq::MergeFrom(const DataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data2server.DataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_building();
      building_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_collector();
      collector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collector_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_meter();
      meter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meter_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_data_desc();
      data_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_desc_);
    }
    if (cached_has_bits & 0x00000010u) {
      conn_type_ = from.conn_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      orig_data_ = from.orig_data_;
    }
    if (cached_has_bits & 0x00000040u) {
      scaled_data_ = from.scaled_data_;
    }
    if (cached_has_bits & 0x00000080u) {
      coef_a_ = from.coef_a_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_coef_b(from.coef_b());
  }
}

void DataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:data2server.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataReq::CopyFrom(const DataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data2server.DataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;
  return true;
}

void DataReq::Swap(DataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataReq::InternalSwap(DataReq* other) {
  using std::swap;
  building_.Swap(&other->building_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  collector_.Swap(&other->collector_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  meter_.Swap(&other->meter_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_desc_.Swap(&other->data_desc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(conn_type_, other->conn_type_);
  swap(orig_data_, other->orig_data_);
  swap(scaled_data_, other->scaled_data_);
  swap(coef_a_, other->coef_a_);
  swap(coef_b_, other->coef_b_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataReq::GetMetadata() const {
  protobuf_data2server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data2server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataResp::kErrcodeFieldNumber;
const int DataResp::kErrmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataResp::DataResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data2server_2eproto::scc_info_DataResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:data2server.DataResp)
}
DataResp::DataResp(const DataResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errmsg()) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:data2server.DataResp)
}

void DataResp::SharedCtor() {
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

DataResp::~DataResp() {
  // @@protoc_insertion_point(destructor:data2server.DataResp)
  SharedDtor();
}

void DataResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DataResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DataResp::descriptor() {
  ::protobuf_data2server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data2server_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataResp& DataResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data2server_2eproto::scc_info_DataResp.base);
  return *internal_default_instance();
}


void DataResp::Clear() {
// @@protoc_insertion_point(message_clear_start:data2server.DataResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    errmsg_.ClearNonDefaultToEmptyNoArena();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:data2server.DataResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string errmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errmsg().data(), static_cast<int>(this->errmsg().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "data2server.DataResp.errmsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:data2server.DataResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:data2server.DataResp)
  return false;
#undef DO_
}

void DataResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:data2server.DataResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // required string errmsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataResp.errmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:data2server.DataResp)
}

::google::protobuf::uint8* DataResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:data2server.DataResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 errcode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // required string errmsg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), static_cast<int>(this->errmsg().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "data2server.DataResp.errmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:data2server.DataResp)
  return target;
}

size_t DataResp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:data2server.DataResp)
  size_t total_size = 0;

  if (has_errmsg()) {
    // required string errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());
  }

  if (has_errcode()) {
    // required int32 errcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }

  return total_size;
}
size_t DataResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:data2server.DataResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string errmsg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->errmsg());

    // required int32 errcode = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:data2server.DataResp)
  GOOGLE_DCHECK_NE(&from, this);
  const DataResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:data2server.DataResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:data2server.DataResp)
    MergeFrom(*source);
  }
}

void DataResp::MergeFrom(const DataResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:data2server.DataResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_errmsg();
      errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DataResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:data2server.DataResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataResp::CopyFrom(const DataResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:data2server.DataResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DataResp::Swap(DataResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataResp::InternalSwap(DataResp* other) {
  using std::swap;
  errmsg_.Swap(&other->errmsg_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(errcode_, other->errcode_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DataResp::GetMetadata() const {
  protobuf_data2server_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_data2server_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

DataService::~DataService() {}

const ::google::protobuf::ServiceDescriptor* DataService::descriptor() {
  protobuf_data2server_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data2server_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* DataService::GetDescriptor() {
  return descriptor();
}

void DataService::Send(::google::protobuf::RpcController* controller,
                         const ::data2server::DataReq*,
                         ::data2server::DataResp*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Send() not implemented.");
  done->Run();
}

void DataService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_data2server_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Send(controller,
             ::google::protobuf::down_cast<const ::data2server::DataReq*>(request),
             ::google::protobuf::down_cast< ::data2server::DataResp*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& DataService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::data2server::DataReq::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& DataService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::data2server::DataResp::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

DataService_Stub::DataService_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
DataService_Stub::DataService_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
DataService_Stub::~DataService_Stub() {
  if (owns_channel_) delete channel_;
}

void DataService_Stub::Send(::google::protobuf::RpcController* controller,
                              const ::data2server::DataReq* request,
                              ::data2server::DataResp* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace data2server
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::data2server::DataReq* Arena::CreateMaybeMessage< ::data2server::DataReq >(Arena* arena) {
  return Arena::CreateInternal< ::data2server::DataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::data2server::DataResp* Arena::CreateMaybeMessage< ::data2server::DataResp >(Arena* arena) {
  return Arena::CreateInternal< ::data2server::DataResp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
